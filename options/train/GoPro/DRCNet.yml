# ------------------------------------------------------------------------
# general settings
name: GoPro-DRCNet
model_type: ImageRestorationModel
scale: 1
num_gpu: 8
manual_seed: 10

datasets:
  train:
    name: gopro-train
    type: PairedImageDataset
    dataroot_gt: /Dataset/Deblurring/GoPro/train/sharp_crops.lmdb
    dataroot_lq: /Dataset/Deblurring/GoPro/train/blur_crops.lmdb

    filename_tmpl: '{}'
    io_backend:
      type: lmdb

    gt_size: 256
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: gopro-test
    type: PairedImageDataset
    dataroot_gt: /data/lifei/Dataset/Deblurring/GoPro/test/target.lmdb
    dataroot_lq: /data/lifei/Dataset/Deblurring/GoPro/test/input.lmdb
    io_backend:
      type: lmdb

# network structures
network_g:
  type: DRCNet
  wf: 64
  hin_position_left: 2
  hin_position_right: 3

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1.6e-5
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 800000
    eta_min: !!float 1e-8

  total_iter: 400000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: IntraCRLoss
    loss_weight: 0.5
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e3
  save_img: false
  grids: true
  crop_size: 256
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
